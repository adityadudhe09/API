workflow:
    name: Fetch IP

stages:
  - fetch
  - build-image
  - db-connect

variables:
  POSTGRES_DB: iptracker
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

services:
  - postgres:13
  
build-job:
  stage: fetch
  image: python:3.9
  before_script:
      - pip install -r requirements.txt
  script:
    - cd app
    - chmod +x log_ip.sh
    - apt-get update && apt-get install -y jq
    - python api.py
    - ./log_ip.sh
    - cat ip_log.txt
  # after_script:
  #   - docker run --name ip-postgres -e POSTGRES_DB=iptracker -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres:13
  #   - docker ps
  #   - docker exec -it ip-postgres psql -U postgres -d iptracker
  #   - SELECT * FROM ip_logs;
  artifacts:
      paths:
        - app/ip.json
        - app/fetched_details.txt
        - app/ip_log.txt  

build-image:
  stage: build-image
  image: docker:19.03.1
  script:
    - docker rm $(docker ps -aq)
    - kill -9 5432
    - docker run --name ip-postgres -e POSTGRES_DB=iptracker -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres:13
    - docker ps
  needs:
    - build-job

db-connect:
  stage: db-connect
  script:
    - psql -U postgres -d iptracker
    - SELECT * FROM ip_logs;